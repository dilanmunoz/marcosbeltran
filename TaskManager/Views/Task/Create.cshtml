@model TaskManager.Models.Task

@{
    ViewBag.Title = "Crear Tarea";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-black text-white">
                    <h4 class="mb-0">Crear Tarea</h4>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Title, "Título", htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Description, "Descripción", htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Priority, "Prioridad", htmlAttributes: new { @class = "form-label" })
                            @Html.EnumDropDownListFor(model => model.Priority, htmlAttributes: new { @class = "form-select" })
                            @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.DueDate, "Vencimiento", htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                            @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                        </div>

                        <div class="d-flex justify-content-between">
                            <button type="submit" class="btn btn-success">
                                <i class="bi bi-save"></i> Crear
                            </button>
                            @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-secondary" })
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
